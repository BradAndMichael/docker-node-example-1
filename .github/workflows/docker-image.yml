name: Jest -> SonarCloud -> DockerHub

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    name: SonarCloud
    runs-on: ubuntu-latest
    steps:

      - uses: actions/checkout@v2
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      
      - name: Install Dependencies
        run: npm i

      - name: Run tests
        run: npm run test
      
      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          args:
            -Dsonar.projectKey=BradAndMichael_docker-node-example-1
            -Dsonar.organization=bradandmichael
      - name: SonarQube Quality Gate Check
        # You may pin to the exact commit or the version.
        # uses: SonarSource/sonarqube-quality-gate-action@15767f0e4eb489cfdd989dc717fa78c038d0de8a
        uses: SonarSource/sonarqube-quality-gate-action@v1.0.0
        timeout-minutes: 4
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Docker images
        # You may pin to the exact commit or the version.
        # uses: docker/build-push-action@e551b19e49efd4e98792db7592c17c09b89db8d8
        uses: docker/build-push-action@v3.0.0
        with:
          # Build's context is the set of files located in the specified PATH or URL
          context: ./
          # Path to the Dockerfile
          file: ./Dockerfile
          # Push is a shorthand for --output=type=registry
          push: true
          # List of secrets to expose to the build (e.g., key=string, GIT_AUTH_TOKEN=mytoken)
          # List of tags
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/docker-node-demo:latest
          # Sets the target stage to build
          target: prod
